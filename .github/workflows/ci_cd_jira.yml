name: Create Jira issue on PR open
on:
  pull_request:
    types: [ opened ]
jobs:
  create_jira_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Get PR details
        id: pr-details
        run: |
          echo "branch=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
          echo "title=${{ github.event.pull_request.title }}" >> $GITHUB_OUTPUT
          echo "description=${{ github.event.pull_request.body }}" >> $GITHUB_OUTPUT
          echo "assignee=${{ github.event.pull_request.user.login }}" >> $GITHUB_OUTPUT
          echo "number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          echo "reviewers=${{ join(github.event.pull_request.requested_reviewers.*.login, ',') }}" >> $GITHUB_OUTPUT
      - name: Create Jira issue
        env:
          JIRA_URL: ${{ secrets.JIRA_URL }}
          PROJECT_KEY: ${{ secrets.JIRA_PROJECT_KEY }}
          ISSUE_TYPE: ${{ secrets.JIRA_ISSUE_TYPE }}
          JIRA_AUTH: ${{ secrets.JIRA_AUTH }}
          DESCRIPTION: ${{ steps.pr-details.outputs.description }}
          ASSIGNEE: ${{ steps.pr-details.outputs.assignee }}
          REVIEWERS: ${{ steps.pr-details.outputs.reviewers }}
          COLLABORATORS_JSON: ${{ secrets.JIRA_GITHUB_MAPPING }}
        run: |
          MAPPED_COLLABORATORS=$(echo "${COLLABORATORS_JSON}" | jq -r '.mapping')
          echo "MAPPED_COLLABORATORS: ${MAPPED_COLLABORATORS}"
          key=${ASSIGNEE}
          echo "ASSIGNEE: ${ASSIGNEE}"
          assignee_id=$(jq -r --arg key "${ASSIGNEE}" '.[$key]' <<<"${MAPPED_COLLABORATORS}")
          echo "ASSIGNEE ID: ${assignee_id}"
          curl -s -X POST \
          --url "${JIRA_URL}/rest/api/2/issue/" \
          --header "Content-Type: application/json" \
          --header "Accept: application/json" \
          --user "${JIRA_AUTH}" \
          -d '{
            "fields": {
              "project": {
                  "key": "'"${PROJECT_KEY}"'"
              },
              "issuetype": {
                  "name": "'"${ISSUE_TYPE}"'"
              },
              "summary": "'"${{ steps.pr-details.outputs.title }} - ${GITHUB_REPOSITORY#${GITHUB_OWNER}}#${{ steps.pr-details.outputs.number }}"'",
              "description": "'"${DESCRIPTION}"'",
              "assignee": {
                "accountId": "'"${assignee_id}"'"
              }
            }
          }' > jira-issue.json
          
          cat jira-issue.json
          # Parse issue key from Jira response
          ISSUE_KEY=$(cat jira-issue.json | jq -r '.key')
          echo "Jira issue created: ${ISSUE_KEY}"
          
          # Create subtask for each reviewer
          for reviewer in $(echo ${{ steps.pr-details.outputs.reviewers }} | tr ',' '\n'); do
            key=${reviewer}
            reviewer_id=$(jq -r --arg key "${reviewer}" '.[$key]' <<<"${MAPPED_COLLABORATORS}")
            curl -s -X POST \
            --url "${JIRA_URL}/rest/api/2/issue/" \
            --header "Content-Type: application/json" \
            --header "Accept: application/json" \
            --user "${JIRA_AUTH}" \
            -d '{
              "fields": {
                "project": {
                    "key": "'"${PROJECT_KEY}"'"
                  },
                  "parent": {
                    "key": "'"${ISSUE_KEY}"'"
                  },
                  "issuetype": {
                    "name": "Sub-task"
                  },
                  "summary": "'"${{ steps.pr-details.outputs.title }} - Review by ${reviewer} - ${GITHUB_REPOSITORY#${GITHUB_OWNER}}#${{ steps.pr-details.outputs.number }}"'",
                  "assignee": {
                    "name": "'"${reviewer_id}"'"
                  }
              }
            }
          }' > /dev/null
          done
